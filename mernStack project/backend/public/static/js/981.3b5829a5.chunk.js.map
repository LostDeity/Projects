{"version":3,"file":"static/js/981.3b5829a5.chunk.js","mappings":"wPAgBA,MA2FA,EA3FiBA,KACf,MAAMC,GAAOC,EAAAA,EAAAA,YAAWC,EAAAA,IAClB,UAAEC,EAAS,MAAEC,EAAK,YAAEC,EAAW,WAAEC,IAAeC,EAAAA,EAAAA,MAC/CC,EAAWC,IAAgBC,EAAAA,EAAAA,GAChC,CACEC,MAAO,CACLC,MAAO,GACPC,SAAS,GAEXC,YAAa,CACXF,MAAO,GACPC,SAAS,GAEXE,QAAS,CACPH,MAAO,GACPC,SAAS,GAEXG,MAAO,CACLJ,MAAO,KACPC,SAAS,KAGb,GAGII,GAAUC,EAAAA,EAAAA,cAsBhB,OACEC,EAAAA,EAAAA,MAACC,EAAAA,SAAc,CAAAC,SAAA,EACbC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACnB,MAAOA,EAAOoB,QAASlB,KACnCa,EAAAA,EAAAA,MAAA,QAAMM,UAAU,aAAaC,SAvBNC,UACzBC,EAAMC,iBACN,IACE,MAAMC,EAAW,IAAIC,SACrBD,EAASE,OAAO,QAASxB,EAAUyB,OAAOtB,MAAMC,OAChDkB,EAASE,OAAO,cAAexB,EAAUyB,OAAOnB,YAAYF,OAC5DkB,EAASE,OAAO,UAAWxB,EAAUyB,OAAOlB,QAAQH,OACpDkB,EAASE,OAAO,QAASxB,EAAUyB,OAAOjB,MAAMJ,aAC1CP,EACJ6B,kDACA,OACAJ,EACA,CACEK,cAAe,UAAYnC,EAAKoC,QAGpCnB,EAAQoB,KAAK,IACf,CAAE,MAAOC,GAAM,GAM6CjB,SAAA,CACvDlB,IAAamB,EAAAA,EAAAA,KAACiB,EAAAA,EAAc,CAACC,WAAS,KACvClB,EAAAA,EAAAA,KAACmB,EAAAA,EAAW,CACVC,QAAM,EACNC,GAAG,QACHC,QAASnC,EACToC,UAAU,8BAEZvB,EAAAA,EAAAA,KAACwB,EAAAA,EAAK,CACJH,GAAG,QACHI,QAAQ,QACRC,KAAK,OACLC,MAAM,QACNC,WAAY,EAACC,EAAAA,EAAAA,OACbN,UAAU,8BACVD,QAASnC,KAEXa,EAAAA,EAAAA,KAACwB,EAAAA,EAAK,CACJH,GAAG,cACHI,QAAQ,WACRE,MAAM,cACNC,WAAY,EAACE,EAAAA,EAAAA,IAAoB,IACjCP,UAAU,4DACVD,QAASnC,KAEXa,EAAAA,EAAAA,KAACwB,EAAAA,EAAK,CACJH,GAAG,UACHI,QAAQ,QACRE,MAAM,UACNC,WAAY,EAACC,EAAAA,EAAAA,OACbN,UAAU,gCACVD,QAASnC,KAEXa,EAAAA,EAAAA,KAAC+B,EAAAA,EAAM,CAACL,KAAK,SAASM,UAAW9C,EAAUK,QAAQQ,SAAC,mBAIvC,C,6DClGrB,MAqCA,EArCekC,GACTA,EAAMC,MAENlC,EAAAA,EAAAA,KAAA,KACEG,UAAS,kBAAAgC,OAAoBF,EAAMG,MAAQ,UAAS,KAAAD,OAAIF,EAAMI,SAC5D,kBAAiB,KAAAF,OAAIF,EAAMK,QAAU,kBACvCJ,KAAMD,EAAMC,KAAKnC,SAEhBkC,EAAMlC,WAITkC,EAAMM,IAENvC,EAAAA,EAAAA,KAACwC,EAAAA,GAAI,CACHD,GAAIN,EAAMM,GACVE,MAAOR,EAAMQ,MACbtC,UAAS,kBAAAgC,OAAoBF,EAAMG,MAAQ,UAAS,KAAAD,OAAIF,EAAMI,SAC5D,kBAAiB,KAAAF,OAAIF,EAAMK,QAAU,kBAAmBvC,SAEzDkC,EAAMlC,YAKXC,EAAAA,EAAAA,KAAA,UACEG,UAAS,kBAAAgC,OAAoBF,EAAMG,MAAQ,UAAS,KAAAD,OAAIF,EAAMI,SAC5D,kBAAiB,KAAAF,OAAIF,EAAMK,QAAU,kBACvCZ,KAAMO,EAAMP,KACZgB,QAAST,EAAMS,QACfV,SAAUC,EAAMD,SAASjC,SAExBkC,EAAMlC,U,+DCjCb,MA4DA,EA5DqBkC,IACnB,MAAOU,EAAMC,IAAWC,EAAAA,EAAAA,aACjBC,EAAYC,IAAiBF,EAAAA,EAAAA,aAC7BtD,EAASyD,IAAcH,EAAAA,EAAAA,WAAS,GAEjCI,GAAgBC,EAAAA,EAAAA,WAEtBC,EAAAA,EAAAA,YAAU,KACR,IAAKR,EACH,OAEF,MAAMS,EAAa,IAAIC,WACvBD,EAAWE,OAAS,KAClBP,EAAcK,EAAWG,OAAO,EAElCH,EAAWI,cAAcb,EAAK,GAC7B,CAACA,IAoBJ,OACE9C,EAAAA,EAAAA,MAAA,OAAKM,UAAU,eAAcJ,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,SACEqB,GAAIY,EAAMZ,GACVoC,IAAKR,EACLvB,KAAK,OACLgC,MAAO,CAAEC,QAAS,QAClBC,OAAO,kBACPC,SA3BiBC,IACrB,IAAIC,EACAC,EAAczE,EACduE,EAAEG,OAAOC,OAAmC,IAA1BJ,EAAEG,OAAOC,MAAMC,QACnCJ,EAAaD,EAAEG,OAAOC,MAAM,GAC5BtB,EAAQmB,GACRf,GAAW,GACXgB,GAAc,IAEdhB,GAAW,GACXgB,GAAY,IAEd/B,EAAMX,QAAQW,EAAMZ,GAAI0C,EAAYC,EAAY,KAiB9CnE,EAAAA,EAAAA,MAAA,OAAKM,UAAS,gBAAAgC,OAAkBF,EAAMb,QAAU,UAAWrB,SAAA,EACzDF,EAAAA,EAAAA,MAAA,OAAKM,UAAU,wBAAuBJ,SAAA,CACnC+C,IAAc9C,EAAAA,EAAAA,KAAA,OAAKoE,IAAKtB,EAAYuB,IAAI,aACvCvB,IAAc9C,EAAAA,EAAAA,KAAA,KAAAD,SAAG,8BAErBC,EAAAA,EAAAA,KAAC+B,EAAAA,EAAM,CAACL,KAAK,SAASgB,QAnBH4B,KACvBrB,EAAcsB,QAAQC,OAAO,EAkBuBzE,SAAC,mBAIjDR,IAAWS,EAAAA,EAAAA,KAAA,KAAAD,SAAIkC,EAAMV,cACnB,C,+DCvDV,MAAMkD,EAAeA,CAACC,EAAOC,KACzB,OAAQA,EAAOjD,MACX,IAAK,SACD,MAAO,IACAgD,EACHpF,MAAOqF,EAAOC,IACdrF,SAASsF,EAAAA,EAAAA,IAASF,EAAOC,IAAKD,EAAO/C,aAE7C,IAAK,QACD,MAAO,IACA8C,EACHI,WAAY,GAEpB,QACI,OAAOJ,EACf,EAyDJ,EAtDezC,IACX,MAAO8C,EAAYC,IAAYC,EAAAA,EAAAA,YAAWR,EAAc,CACpDnF,MAAO2C,EAAMiD,cAAe,GAC5BJ,WAAW,EACXvF,QAAS0C,EAAMkD,eAAgB,KAG7B,GAAE9D,EAAE,QAAEC,GAAYW,GAClB,MAAE3C,EAAK,QAAEC,GAAYwF,GAE3B5B,EAAAA,EAAAA,YAAU,KACN7B,EAAQD,EAAI/B,EAAOC,EAAQ,GAC5B,CAAC8B,EAAI/B,EAAOC,EAAS+B,IAExB,MAAM8D,EAAgB9E,IAClB0E,EAAS,CACLtD,KAAM,SACNkD,IAAKtE,EAAM2D,OAAO3E,MAClBsC,WAAYK,EAAML,YACpB,EAGAyD,EAAeA,KACjBL,EAAS,CACLtD,KAAM,SACR,EAEAD,EAA4B,UAAlBQ,EAAMR,SAClBzB,EAAAA,EAAAA,KAAA,SACIqB,GAAIY,EAAMZ,GACVK,KAAMO,EAAMP,KACZ4D,YAAarD,EAAMqD,YACnBzB,SAAUuB,EACVG,OAAQF,EACR/F,MAAOyF,EAAWzF,SAEtBU,EAAAA,EAAAA,KAAA,YACIqB,GAAIY,EAAMZ,GACVmE,KAAMvD,EAAMuD,MAAQ,EACpB3B,SAAUuB,EACVG,OAAQF,EACR/F,MAAOyF,EAAWzF,QAK1B,OAAOO,EAAAA,EAAAA,MAAA,OAAKM,UAAS,gBAAAgC,QAAmB4C,EAAWxF,SAAWwF,EAAWD,WAAa,yBAA0B/E,SAAA,EAC5GC,EAAAA,EAAAA,KAAA,SAAOyF,QAASxD,EAAMZ,GAAGtB,SAAGkC,EAAMN,QACjCF,GACCsD,EAAWxF,SAAWwF,EAAWD,YAAa9E,EAAAA,EAAAA,KAAA,KAAAD,SAAIkC,EAAMV,cACxD,C,sECpEV,MAaA,EAbmBU,IAEfjC,EAAAA,EAAAA,KAAC0F,EAAAA,EAAK,CACJC,SAAU1D,EAAM/B,QAChB0F,OAAO,qBACPC,OAAQ5D,EAAMnD,MACdgH,QAAQ9F,EAAAA,EAAAA,KAAC+B,EAAAA,EAAM,CAACW,QAAST,EAAM/B,QAAQH,SAAC,SAAcA,UAEtDC,EAAAA,EAAAA,KAAA,KAAAD,SAAIkC,EAAMnD,S,+ECNhB,MAAMiH,EAAgB9D,IACpB,MAAM+D,GACJnG,EAAAA,EAAAA,MAAA,OAAKM,UAAS,SAAAgC,OAAWF,EAAM9B,WAAauD,MAAOzB,EAAMyB,MAAM3D,SAAA,EAC7DC,EAAAA,EAAAA,KAAA,UAAQG,UAAS,iBAAAgC,OAAmBF,EAAMgE,aAAclG,UACtDC,EAAAA,EAAAA,KAAA,MAAAD,SAAKkC,EAAM2D,YAEb/F,EAAAA,EAAAA,MAAA,QACEO,SACE6B,EAAM7B,SAAW6B,EAAM7B,SAAYE,GAAUA,EAAMC,iBACpDR,SAAA,EAEDC,EAAAA,EAAAA,KAAA,OAAKG,UAAS,kBAAAgC,OAAoBF,EAAMiE,cAAenG,SACpDkC,EAAMlC,YAETC,EAAAA,EAAAA,KAAA,UAAQG,UAAS,iBAAAgC,OAAmBF,EAAMkE,aAAcpG,SACrDkC,EAAM6D,eAKf,OAAOM,EAAAA,aAAsBJ,EAASK,SAASC,eAAe,cAAc,EAoB9E,EAjBerE,IAEXpC,EAAAA,EAAAA,MAACC,EAAAA,SAAc,CAAAC,SAAA,CACZkC,EAAM4D,OAAQ7F,EAAAA,EAAAA,KAACuG,EAAAA,EAAQ,CAAC7D,QAAST,EAAM0D,YACxC3F,EAAAA,EAAAA,KAACwG,EAAAA,EAAa,CACZC,GAAIxE,EAAM4D,KACVa,cAAY,EACZC,eAAa,EACbC,QAAS,IACTC,WAAW,QAAO9G,UAElBC,EAAAA,EAAAA,KAAC+F,EAAY,IAAK9D,Q,6CCvC1B,MAAM6E,EAAcA,CAACpC,EAAOC,KACxB,OAAQA,EAAOjD,MACX,IAAK,eACD,IAAIqF,GAAc,EAElB,IAAK,MAAMC,KAAWtC,EAAM/D,OACnB+D,EAAM/D,OAAOqG,KAIdD,EADAC,IAAYrC,EAAOqC,QACLD,GAAepC,EAAOpF,QAEtBwH,GAAerC,EAAM/D,OAAOqG,GAASzH,SAG3D,MAAO,IACAmF,EACH/D,OAAQ,IACD+D,EAAM/D,OACT,CAACgE,EAAOqC,SAAU,CAAE1H,MAAOqF,EAAOrF,MAAOC,QAASoF,EAAOpF,UAE7DA,QAASwH,GAEjB,IAAK,WACD,MAAO,CACHpG,OAAQgE,EAAOhE,OACfpB,QAASoF,EAAOoC,aAExB,QACI,OAAOrC,EACf,EAGStF,EAAUA,CAAC6H,EAAeC,KACnC,MAAOhI,EAAW8F,IAAYC,EAAAA,EAAAA,YAAW6B,EAAa,CAClDnG,OAAQsG,EACR1H,QAAS2H,IAoBb,MAAO,CAAChI,GAjBaiI,EAAAA,EAAAA,cAAY,CAAC9F,EAAI/B,EAAOC,KACzCyF,EAAS,CACLtD,KAAM,eACNpC,MAAOA,EACPC,QAASA,EACTyH,QAAS3F,GACX,GACH,KAEiB8F,EAAAA,EAAAA,cAAY,CAACC,EAAWC,KACxCrC,EAAS,CACLtD,KAAM,WACNf,OAAQyG,EACRL,YAAaM,GACf,GACH,IAE0C,C,6CCxD1C,MAAMpI,EAAgBA,KAC3B,MAAOJ,EAAWyI,IAAgBzE,EAAAA,EAAAA,WAAS,IACpC/D,EAAOyI,IAAY1E,EAAAA,EAAAA,YAEpB2E,GAAqBtE,EAAAA,EAAAA,QAAO,IAC5BnE,GAAcoI,EAAAA,EAAAA,cAClB9G,eAAOoH,GAAoD,IAA/CC,EAAMC,UAAAxD,OAAA,QAAAyD,IAAAD,UAAA,GAAAA,UAAA,GAAG,MAAOE,EAAIF,UAAAxD,OAAA,QAAAyD,IAAAD,UAAA,GAAAA,UAAA,GAAG,KAAMG,EAAOH,UAAAxD,OAAA,QAAAyD,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAClDL,GAAa,GACb,MAAMS,EAAgB,IAAIC,gBAC1BR,EAAmBjD,QAAQxD,KAAKgH,GAChC,IACE,MAAME,QAAiBC,MAAMT,EAAK,CAChCC,SACAG,OACAC,UACAK,OAAQJ,EAAcI,SAElBC,QAAqBH,EAASI,OAIpC,GAHAb,EAAmBjD,QAAUiD,EAAmBjD,QAAQ+D,QACrDC,GAAYA,IAAYR,KAEtBE,EAASO,GACZ,MAAM,IAAIC,MAAML,EAAaM,SAG/B,OADApB,GAAa,GACNc,CACT,CAAE,MAAOpH,GAGP,MAFAuG,EAASvG,EAAI0H,SACbpB,GAAa,GACPtG,CACR,CACF,GACA,IAaF,OANAmC,EAAAA,EAAAA,YAAU,IACD,KACLqE,EAAmBjD,QAAQoE,SAASC,GAAcA,EAAUC,SAAQ,GAErE,IAEI,CAAEhK,YAAWC,QAAOC,cAAaC,WAVrBA,KACjBuI,EAAS,KAAK,EASoC,C,6DC/CtD,MAAMuB,EAAyB,UACzBC,EAA2B,YAC3BC,EAA2B,YAG3BC,EAAuB,QAGhBpH,EAAoBA,KAAA,CAASH,KAAMoH,IAEnChH,EAAsB8C,IAAG,CACpClD,KAAMqH,EACNnE,IAAKA,IAQMsE,EAAkBA,KAAA,CAASxH,KAAMuH,IAEjCpE,EAAWA,CAACvF,EAAOsC,KAC9B,IAAIrC,GAAU,EACd,IAAK,MAAM4J,KAAavH,EAClBuH,EAAUzH,OAASoH,IACrBvJ,EAAUA,GAAWD,EAAM8J,OAAOjF,OAAS,GAEzCgF,EAAUzH,OAASqH,IACrBxJ,EAAUA,GAAWD,EAAM8J,OAAOjF,QAAUgF,EAAUvE,KAEpDuE,EAAUzH,OAASsH,IACrBzJ,EAAUA,GAAWD,EAAM8J,OAAOjF,QAAUgF,EAAUvE,KA7BjC,QA+BnBuE,EAAUzH,OACZnC,EAAUA,IAAYD,GAAS6J,EAAUvE,KA/BpB,QAiCnBuE,EAAUzH,OACZnC,EAAUA,IAAYD,GAAS6J,EAAUvE,KAEvCuE,EAAUzH,OAASuH,IACrB1J,EAAUA,GAAW,iBAAiB8J,KAAK/J,IAG/C,OAAOC,CAAO,C","sources":["places/pages/NewPlace.js","shared/components/FormElements/Button.js","shared/components/FormElements/ImageUpload.js","shared/components/FormElements/Input.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/form-hook.js","shared/hooks/http-hook.js","shared/util/validators.js"],"sourcesContent":["import React, { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH,\n} from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport \"./PlaceForm.css\";\n\nconst NewPlace = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [formState, inputHandler] = useForm(\n    {\n      title: {\n        value: \"\",\n        isValid: false,\n      },\n      description: {\n        value: \"\",\n        isValid: false,\n      },\n      address: {\n        value: \"\",\n        isValid: false,\n      },\n      image: {\n        value: null,\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  const history = useHistory();\n\n  const placeSubmitHandler = async (event) => {\n    event.preventDefault();\n    try {\n      const formData = new FormData();\n      formData.append(\"title\", formState.inputs.title.value);\n      formData.append(\"description\", formState.inputs.description.value);\n      formData.append(\"address\", formState.inputs.address.value);\n      formData.append(\"image\", formState.inputs.image.value);\n      await sendRequest(\n        process.env.REACT_APP_BACKEND_URL + \"/places\",\n        \"POST\",\n        formData,\n        {\n          Authorization: \"Bearer \" + auth.token,\n        }\n      ); //URL will change when on production server\n      history.push(\"/\");\n    } catch (err) {}\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <form className=\"place-form\" onSubmit={placeSubmitHandler}>\n        {isLoading && <LoadingSpinner asOverlay />}\n        <ImageUpload\n          center\n          id=\"image\"\n          onInput={inputHandler}\n          errorText=\"Please provide an Image.\"\n        />\n        <Input\n          id=\"title\"\n          element=\"input\"\n          type=\"text\"\n          label=\"Title\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid title.\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"description\"\n          element=\"textarea\"\n          label=\"Description\"\n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText=\"Please enter a valid description (at least 5 characters).\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"address\"\n          element=\"input\"\n          label=\"Address\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid address.\"\n          onInput={inputHandler}\n        />\n        <Button type=\"submit\" disabled={!formState.isValid}>\n          ADD PLACE\n        </Button>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default NewPlace;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { useRef, useState, useEffect } from \"react\";\r\nimport Button from \"./Button\";\r\nimport \"./ImageUpload.css\";\r\n\r\nconst ImageUpload = (props) => {\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  const filePickerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n  const pickedHandler = (e) => {\r\n    let pickedFile;\r\n    let fileIsValid = isValid;\r\n    if (e.target.files && e.target.files.length === 1) {\r\n      pickedFile = e.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid(false);\r\n    }\r\n    props.onInput(props.id, pickedFile, fileIsValid);\r\n  };\r\n\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-control\">\r\n      <input\r\n        id={props.id}\r\n        ref={filePickerRef}\r\n        type=\"file\"\r\n        style={{ display: \"none\" }}\r\n        accept=\".jpg,.png,.jpeg\"\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${props.center && \"center\"}`}>\r\n        <div className=\"image-upload__preview\">\r\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n          {!previewUrl && <p>Please pick an Image!</p>}\r\n        </div>\r\n        <Button type=\"button\" onClick={pickImageHandler}>\r\n          PICK IMAGE\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","import React, { useReducer, useEffect } from \"react\";\nimport { validate } from \"../../util/validators\";\n\nimport './Input.css'\n\nconst inputReducer = (state, action) => {\n    switch (action.type) {\n        case 'CHANGE':\n            return {\n                ...state,\n                value: action.val,\n                isValid: validate(action.val, action.validators)  \n            };\n        case 'TOUCH':\n            return {\n                ...state,\n                isTouched : true\n            }\n        default:\n            return state;\n    }\n}\n\nconst Input = (props) => {\n    const [inputState, dispatch] = useReducer(inputReducer, {\n        value: props.initialValue ||'',\n        isTouched: false,\n        isValid: props.initialValid || false\n    });\n\n    const { id, onInput } = props;\n    const { value, isValid } = inputState;\n\n    useEffect(() => {\n        onInput(id, value, isValid)\n    }, [id, value, isValid, onInput]);\n\n    const changeHandler = event => {\n        dispatch({\n            type: 'CHANGE',\n            val: event.target.value,\n            validators: props.validators\n        })\n    }\n\n    const touchHandler = () => {\n        dispatch({\n            type: 'TOUCH'\n        })\n    }\n    const element = props.element === 'input' ? (\n        <input\n            id={props.id}\n            type={props.type}\n            placeholder={props.placeholder}\n            onChange={changeHandler}\n            onBlur={touchHandler}\n            value={inputState.value}\n        />) : (\n        <textarea\n            id={props.id}\n            rows={props.rows || 3}\n            onChange={changeHandler}\n            onBlur={touchHandler}\n            value={inputState.value}\n        />)\n    \n    \n\n    return <div className={`form-control ${!inputState.isValid && inputState.isTouched && 'form-control--invalid'}`}>\n        <label htmlFor={props.id} >{props.label}</label>\n        {element}\n        {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>;\n};\n\n\nexport default Input;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CSSTransition } from \"react-transition-group\";\nimport Backdrop from \"./Backdrop\";\n\nimport \"./Modal.css\";\n\nconst ModalOverlay = (props) => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : (event) => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"));\n};\n\nconst Modal = (props) => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import { useCallback, useReducer } from \"react\";\n\nconst formReducer = (state, action) => {\n    switch (action.type) {\n        case \"INPUT_CHANGE\":\n            let formIsValid = true;\n\n            for (const inputId in state.inputs) {\n                if (!state.inputs[inputId]) {\n                    continue;\n                }\n                if (inputId === action.inputId) {\n                    formIsValid = formIsValid && action.isValid;\n                } else {\n                    formIsValid = formIsValid && state.inputs[inputId].isValid;\n                }\n            }\n            return {\n                ...state,\n                inputs: {\n                    ...state.inputs,\n                    [action.inputId]: { value: action.value, isValid: action.isValid },\n                },\n                isValid: formIsValid,\n            };\n        case \"SET_DATA\":\n            return {\n                inputs: action.inputs,\n                isValid: action.formIsValid,\n            };\n        default:\n            return state;\n    }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n    const [formState, dispatch] = useReducer(formReducer, {\n        inputs: initialInputs,\n        isValid: initialFormValidity,\n    });\n\n    const inputHandler = useCallback((id, value, isValid) => {\n        dispatch({\n            type: \"INPUT_CHANGE\",\n            value: value,\n            isValid: isValid,\n            inputId: id,\n        });\n    }, []);\n\n    const setFormData = useCallback((inputData, formValidity) => {\n        dispatch({\n            type: \"SET_DATA\",\n            inputs: inputData,\n            formIsValid: formValidity,\n        });\n    }, []);\n\n    return [formState, inputHandler, setFormData];\n};\n","import { useState, useCallback, useRef, useEffect } from \"react\";\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const activeHttpRequests = useRef([]);\r\n  const sendRequest = useCallback(\r\n    async (url, method = \"GET\", body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      const httpAbortCtrl = new AbortController();\r\n      activeHttpRequests.current.push(httpAbortCtrl);\r\n      try {\r\n        const response = await fetch(url, {\r\n          method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortCtrl.signal,\r\n        });\r\n        const responseData = await response.json();\r\n        activeHttpRequests.current = activeHttpRequests.current.filter(\r\n          (reqCtrl) => reqCtrl !== httpAbortCtrl\r\n        );\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message);\r\n        }\r\n        setIsLoading(false);\r\n        return responseData;\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setIsLoading(false);\r\n        throw err;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      activeHttpRequests.current.forEach((abortCtrl) => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n"],"names":["NewPlace","auth","useContext","AuthContext","isLoading","error","sendRequest","clearError","useHttpClient","formState","inputHandler","useForm","title","value","isValid","description","address","image","history","useHistory","_jsxs","React","children","_jsx","ErrorModal","onClear","className","onSubmit","async","event","preventDefault","formData","FormData","append","inputs","process","Authorization","token","push","err","LoadingSpinner","asOverlay","ImageUpload","center","id","onInput","errorText","Input","element","type","label","validators","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","Button","disabled","props","href","concat","size","inverse","danger","to","Link","exact","onClick","file","setFile","useState","previewUrl","setPreviewUrl","setIsValid","filePickerRef","useRef","useEffect","fileReader","FileReader","onload","result","readAsDataURL","ref","style","display","accept","onChange","e","pickedFile","fileIsValid","target","files","length","src","alt","pickImageHandler","current","click","inputReducer","state","action","val","validate","isTouched","inputState","dispatch","useReducer","initialValue","initialValid","changeHandler","touchHandler","placeholder","onBlur","rows","htmlFor","Modal","onCancel","header","show","footer","ModalOverlay","content","headerClass","contentClass","footerClass","ReactDOM","document","getElementById","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","formReducer","formIsValid","inputId","initialInputs","initialFormValidity","useCallback","inputData","formValidity","setIsLoading","setError","activeHttpRequests","url","method","arguments","undefined","body","headers","httpAbortCtrl","AbortController","response","fetch","signal","responseData","json","filter","reqCtrl","ok","Error","message","forEach","abortCtrl","abort","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_EMAIL","validator","trim","test"],"sourceRoot":""}