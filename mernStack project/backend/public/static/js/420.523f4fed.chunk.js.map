{"version":3,"file":"static/js/420.523f4fed.chunk.js","mappings":"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","sources":["shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js","shared/components/FormElements/Button.js","shared/components/UIElements/Card.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/http-hook.js"],"sourcesContent":["import React, { useRef, useEffect } from \"react\";\n\nimport \"./Map.css\";\n\nconst Map = (props) => {\n  const mapRef = useRef();\n\n  const { center, zoom } = props;\n\n  useEffect(() => {\n    const map = new window.google.maps.Map(mapRef.current, {\n      center: center,\n      zoom: zoom,\n    });\n\n    new window.google.maps.Marker({ position: center, map: map });\n  }, [center, zoom]);\n\n  return (\n    <div\n      ref={mapRef}\n      className={`map ${props.className}`}\n      style={props.style}\n    >  \n    </div>\n  );\n};\n\nexport default Map;\n","import React, { useState, useContext } from \"react\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Modal from \"../../shared/components/UIElements/Modal\";\nimport Map from \"../../shared/components/UIElements/Map\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\n\nimport \"./PlaceItem.css\";\n\nconst PlaceItem = (props) => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [showMap, setShowMap] = useState(false);\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n\n  const openMapHandler = () => {\n    return setShowMap(true);\n  };\n\n  const closeMapHandler = () => {\n    return setShowMap(false);\n  };\n\n  const showDeleteWarningHandler = () => {\n    setShowConfirmModal(true);\n  };\n\n  const cancelDeleteHandler = () => {\n    setShowConfirmModal(false);\n  };\n\n  const confirmDeleteHandler = async () => {\n    setShowConfirmModal(false);\n    try {\n      await sendRequest(\n        process.env.REACT_APP_BACKEND_URL + `/places/${props.id}`,\n        \"DELETE\",\n        null,\n        {\n          Authorization: \"Bearer \" + auth.token,\n        }\n      );\n      props.onDelete(props.id);\n    } catch (err) {}\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Modal\n        show={showMap}\n        onCancel={closeMapHandler}\n        header={props.address}\n        contentClass=\"place-item__modal-content\"\n        footerClass=\"place-item__modal-actions\"\n        footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\n      >\n        <div className=\"map-container\">\n          <Map center={props.coordinates} zoom={16} />\n        </div>\n      </Modal>\n      <Modal\n        show={showConfirmModal}\n        onCancel={cancelDeleteHandler}\n        header=\"Are you sure?\"\n        footerClass=\"place-item__modal-actions\"\n        footer={\n          <React.Fragment>\n            <Button inverse onClick={cancelDeleteHandler}>\n              CANCEL\n            </Button>\n            <Button Danger onClick={confirmDeleteHandler}>\n              DELETE\n            </Button>\n          </React.Fragment>\n        }\n      >\n        <p>\n          Do you want to proceed and delete this place? Please not that it can't\n          be undone thereafter.\n        </p>\n      </Modal>\n      <li className=\"place-item\">\n        <Card className=\"place-item__content\">\n          {isLoading && <LoadingSpinner asOverlay />}\n          <div className=\"place-item__image\">\n            <img\n              src={`${process.env.REACT_APP_ASSET_URL}${props.image}`}\n              alt={props.title}\n            />\n          </div>\n          <div className=\"place-item__info\">\n            <h2>{props.title}</h2>\n            <h3>{props.address}</h3>\n            <p>{props.description}</p>\n          </div>\n          <div className=\"place-item__actions\">\n            <Button inverse onClick={openMapHandler}>\n              VIEW ON MAP\n            </Button>\n            {auth.userId === props.creatorId && (\n              <Button to={`/places/${props.id}`}>EDIT</Button>\n            )}\n            {auth.userId === props.creatorId && (\n              <Button danger onClick={showDeleteWarningHandler}>\n                DELETE\n              </Button>\n            )}\n          </div>\n        </Card>\n      </li>\n    </React.Fragment>\n  );\n};\n\nexport default PlaceItem;\n","import React from \"react\";\nimport PlaceItem from \"./PlaceItem\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Button from \"../../shared/components/FormElements/Button\";\n\nimport \"./PlaceList.css\";\n\nconst PlaceList = (props) => {\n  if (props.items.length === 0) {\n    return (\n      <div className=\"place-list center\">\n        <Card>\n          <h2>No Places found. Please Create one</h2>\n          <Button to=\"/places/new\">Share Place</Button>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <ul className=\"place-list\">\n      {props.items.map((place) => (\n        <PlaceItem\n          key={place.id}\n          id={place.id}\n          image={place.image}\n          title={place.title}\n          description={place.description}\n          address={place.address}\n          creatorId={place.creator}\n          coordinates={place.location}\n          onDelete={props.onDeletePlace}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default PlaceList;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\n\nimport PlaceList from \"../components/PlaceList\";\n\n/* const DUMMY_PLACES = [\n  {\n    id: \"p1\",\n    title: \"Empire State Building\",\n    description: \"One of the most famous sky scrapers in the world!\",\n    imageUrl:\n      \"https://images.fineartamerica.com/images/artworkimages/mediumlarge/1/empire-state-building-michael-tompsett.jpg\",\n    address: \"Empire State Building, New York, NY 10001, USA\",\n    location: {\n      lat: 40.7485159,\n      lng: -74.0681644,\n    },\n    creator: \"u1\",\n  },\n  {\n    id: \"p2\",\n    title: \"Empire State Building\",\n    description: \"One of the most famous sky scrapers in the world!\",\n    imageUrl:\n      \"https://images.fineartamerica.com/images/artworkimages/mediumlarge/1/empire-state-building-michael-tompsett.jpg\",\n    address: \"Empire State Building, New York, NY 10001, USA\",\n    location: {\n      lat: 40.7485159,\n      lng: -74.0681644,\n    },\n    creator: \"u2\",\n  },\n]; */\n\nconst UserPlaces = () => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedPlaces, setLoadedPlaces] = useState();\n\n  const userId = useParams().userId;\n\n  useEffect(() => {\n    const fetchPlaces = async () => {\n      try {\n        const responseData = await sendRequest(\n          process.env.REACT_APP_BACKEND_URL + `/places/user/${userId}`\n        );\n\n        setLoadedPlaces(responseData.places);\n      } catch (err) {}\n    };\n    fetchPlaces();\n  }, [sendRequest, userId]);\n\n  const placeDeletedHandler = (deletedPlaceId) => {\n    setLoadedPlaces((prevPlaces) =>\n      prevPlaces.filter((place) => place.id !== deletedPlaceId)\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      )}\n      {!isLoading && loadedPlaces && (\n        <PlaceList items={loadedPlaces} onDeletePlace={placeDeletedHandler} />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default UserPlaces;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CSSTransition } from \"react-transition-group\";\nimport Backdrop from \"./Backdrop\";\n\nimport \"./Modal.css\";\n\nconst ModalOverlay = (props) => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : (event) => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"));\n};\n\nconst Modal = (props) => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import { useState, useCallback, useRef, useEffect } from \"react\";\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const activeHttpRequests = useRef([]);\r\n  const sendRequest = useCallback(\r\n    async (url, method = \"GET\", body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      const httpAbortCtrl = new AbortController();\r\n      activeHttpRequests.current.push(httpAbortCtrl);\r\n      try {\r\n        const response = await fetch(url, {\r\n          method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortCtrl.signal,\r\n        });\r\n        const responseData = await response.json();\r\n        activeHttpRequests.current = activeHttpRequests.current.filter(\r\n          (reqCtrl) => reqCtrl !== httpAbortCtrl\r\n        );\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message);\r\n        }\r\n        setIsLoading(false);\r\n        return responseData;\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setIsLoading(false);\r\n        throw err;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      activeHttpRequests.current.forEach((abortCtrl) => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\n"],"names":["props","mapRef","useRef","center","zoom","useEffect","map","window","google","maps","Map","current","Marker","position","_jsx","ref","className","concat","style","auth","useContext","AuthContext","isLoading","error","sendRequest","clearError","useHttpClient","showMap","setShowMap","useState","showConfirmModal","setShowConfirmModal","closeMapHandler","cancelDeleteHandler","_jsxs","React","children","ErrorModal","onClear","Modal","show","onCancel","header","address","contentClass","footerClass","footer","Button","onClick","coordinates","inverse","Danger","async","process","id","Authorization","token","onDelete","err","Card","LoadingSpinner","asOverlay","src","image","alt","title","description","openMapHandler","userId","creatorId","to","danger","showDeleteWarningHandler","items","length","place","PlaceItem","creator","location","onDeletePlace","UserPlaces","loadedPlaces","setLoadedPlaces","useParams","responseData","places","fetchPlaces","PlaceList","deletedPlaceId","prevPlaces","filter","href","size","Link","exact","type","disabled","ModalOverlay","content","headerClass","onSubmit","event","preventDefault","ReactDOM","document","getElementById","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","setIsLoading","setError","activeHttpRequests","useCallback","url","method","arguments","undefined","body","headers","httpAbortCtrl","AbortController","push","response","fetch","signal","json","reqCtrl","ok","Error","message","forEach","abortCtrl","abort"],"sourceRoot":""}