{"version":3,"file":"static/js/220.38383e0a.chunk.js","mappings":"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","sources":["shared/components/FormElements/Button.js","shared/components/FormElements/ImageUpload.js","shared/components/FormElements/Input.js","shared/components/UIElements/Card.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/form-hook.js","shared/hooks/http-hook.js","shared/util/validators.js","user/pages/Auth.js"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { useRef, useState, useEffect } from \"react\";\r\nimport Button from \"./Button\";\r\nimport \"./ImageUpload.css\";\r\n\r\nconst ImageUpload = (props) => {\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  const filePickerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n  const pickedHandler = (e) => {\r\n    let pickedFile;\r\n    let fileIsValid = isValid;\r\n    if (e.target.files && e.target.files.length === 1) {\r\n      pickedFile = e.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid(false);\r\n    }\r\n    props.onInput(props.id, pickedFile, fileIsValid);\r\n  };\r\n\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-control\">\r\n      <input\r\n        id={props.id}\r\n        ref={filePickerRef}\r\n        type=\"file\"\r\n        style={{ display: \"none\" }}\r\n        accept=\".jpg,.png,.jpeg\"\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${props.center && \"center\"}`}>\r\n        <div className=\"image-upload__preview\">\r\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n          {!previewUrl && <p>Please pick an Image!</p>}\r\n        </div>\r\n        <Button type=\"button\" onClick={pickImageHandler}>\r\n          PICK IMAGE\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","import React, { useReducer, useEffect } from \"react\";\nimport { validate } from \"../../util/validators\";\n\nimport './Input.css'\n\nconst inputReducer = (state, action) => {\n    switch (action.type) {\n        case 'CHANGE':\n            return {\n                ...state,\n                value: action.val,\n                isValid: validate(action.val, action.validators)  \n            };\n        case 'TOUCH':\n            return {\n                ...state,\n                isTouched : true\n            }\n        default:\n            return state;\n    }\n}\n\nconst Input = (props) => {\n    const [inputState, dispatch] = useReducer(inputReducer, {\n        value: props.initialValue ||'',\n        isTouched: false,\n        isValid: props.initialValid || false\n    });\n\n    const { id, onInput } = props;\n    const { value, isValid } = inputState;\n\n    useEffect(() => {\n        onInput(id, value, isValid)\n    }, [id, value, isValid, onInput]);\n\n    const changeHandler = event => {\n        dispatch({\n            type: 'CHANGE',\n            val: event.target.value,\n            validators: props.validators\n        })\n    }\n\n    const touchHandler = () => {\n        dispatch({\n            type: 'TOUCH'\n        })\n    }\n    const element = props.element === 'input' ? (\n        <input\n            id={props.id}\n            type={props.type}\n            placeholder={props.placeholder}\n            onChange={changeHandler}\n            onBlur={touchHandler}\n            value={inputState.value}\n        />) : (\n        <textarea\n            id={props.id}\n            rows={props.rows || 3}\n            onChange={changeHandler}\n            onBlur={touchHandler}\n            value={inputState.value}\n        />)\n    \n    \n\n    return <div className={`form-control ${!inputState.isValid && inputState.isTouched && 'form-control--invalid'}`}>\n        <label htmlFor={props.id} >{props.label}</label>\n        {element}\n        {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>;\n};\n\n\nexport default Input;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CSSTransition } from \"react-transition-group\";\nimport Backdrop from \"./Backdrop\";\n\nimport \"./Modal.css\";\n\nconst ModalOverlay = (props) => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : (event) => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"));\n};\n\nconst Modal = (props) => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import { useCallback, useReducer } from \"react\";\n\nconst formReducer = (state, action) => {\n    switch (action.type) {\n        case \"INPUT_CHANGE\":\n            let formIsValid = true;\n\n            for (const inputId in state.inputs) {\n                if (!state.inputs[inputId]) {\n                    continue;\n                }\n                if (inputId === action.inputId) {\n                    formIsValid = formIsValid && action.isValid;\n                } else {\n                    formIsValid = formIsValid && state.inputs[inputId].isValid;\n                }\n            }\n            return {\n                ...state,\n                inputs: {\n                    ...state.inputs,\n                    [action.inputId]: { value: action.value, isValid: action.isValid },\n                },\n                isValid: formIsValid,\n            };\n        case \"SET_DATA\":\n            return {\n                inputs: action.inputs,\n                isValid: action.formIsValid,\n            };\n        default:\n            return state;\n    }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n    const [formState, dispatch] = useReducer(formReducer, {\n        inputs: initialInputs,\n        isValid: initialFormValidity,\n    });\n\n    const inputHandler = useCallback((id, value, isValid) => {\n        dispatch({\n            type: \"INPUT_CHANGE\",\n            value: value,\n            isValid: isValid,\n            inputId: id,\n        });\n    }, []);\n\n    const setFormData = useCallback((inputData, formValidity) => {\n        dispatch({\n            type: \"SET_DATA\",\n            inputs: inputData,\n            formIsValid: formValidity,\n        });\n    }, []);\n\n    return [formState, inputHandler, setFormData];\n};\n","import { useState, useCallback, useRef, useEffect } from \"react\";\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const activeHttpRequests = useRef([]);\r\n  const sendRequest = useCallback(\r\n    async (url, method = \"GET\", body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      const httpAbortCtrl = new AbortController();\r\n      activeHttpRequests.current.push(httpAbortCtrl);\r\n      try {\r\n        const response = await fetch(url, {\r\n          method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortCtrl.signal,\r\n        });\r\n        const responseData = await response.json();\r\n        activeHttpRequests.current = activeHttpRequests.current.filter(\r\n          (reqCtrl) => reqCtrl !== httpAbortCtrl\r\n        );\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message);\r\n        }\r\n        setIsLoading(false);\r\n        return responseData;\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setIsLoading(false);\r\n        throw err;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      activeHttpRequests.current.forEach((abortCtrl) => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useState, useContext } from \"react\";\n\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE,\n} from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\nimport \"./Auth.css\";\n\nconst Auth = () => {\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      email: {\n        value: \"\",\n        isValid: false,\n      },\n      password: {\n        value: \"\",\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: undefined,\n          image: undefined,\n        },\n        formState.inputs.email.isValid && formState.inputs.password.isValid\n      );\n    } else {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: {\n            value: \"\",\n            isValid: false,\n          },\n          image: {\n            value: null,\n            isValid: false,\n          },\n        },\n        false\n      );\n    }\n    setIsLoginMode((prevMode) => !prevMode);\n  };\n\n  const authSubmitHandler = async (event) => {\n    event.preventDefault();\n\n    if (isLoginMode) {\n      try {\n        const responseData = await sendRequest(\n          process.env.REACT_APP_BACKEND_URL + \"/users/login\",\n          \"POST\",\n          JSON.stringify({\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value,\n          }),\n          {\n            \"Content-Type\": \"application/json\",\n          }\n        );\n\n        auth.login(responseData.userId, responseData.token);\n      } catch (err) {}\n    } else {\n      try {\n        const formData = new FormData();\n        formData.append(\"email\", formState.inputs.email.value);\n        formData.append(\"name\", formState.inputs.name.value);\n        formData.append(\"password\", formState.inputs.password.value);\n        formData.append(\"image\", formState.inputs.image.value);\n        const responseData = await sendRequest(\n          process.env.REACT_APP_BACKEND_URL + \"/users/signup\",\n          \"POST\",\n          formData\n        );\n\n        auth.login(responseData.userId, responseData.token);\n      } catch (err) {}\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Card className=\"authentication\">\n        {isLoading && <LoadingSpinner asOverlay />}\n        <h2>Login Required</h2>\n        <hr />\n        <form onSubmit={authSubmitHandler}>\n          {!isLoginMode && (\n            <Input\n              element=\"input\"\n              id=\"name\"\n              type=\"text\"\n              label=\"Your Name\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter a name.\"\n              onInput={inputHandler}\n            />\n          )}\n          {!isLoginMode && (\n            <ImageUpload\n              center\n              id=\"image\"\n              onInput={inputHandler}\n              errorText=\"Please provide an Image!\"\n            />\n          )}\n          <Input\n            element=\"input\"\n            id=\"email\"\n            type=\"email\"\n            label=\"E-Mail\"\n            validators={[VALIDATOR_EMAIL()]}\n            errorText=\"Please enter a valid email address.\"\n            onInput={inputHandler}\n          />\n          <Input\n            element=\"input\"\n            id=\"password\"\n            type=\"password\"\n            label=\"Password\"\n            validators={[VALIDATOR_MINLENGTH(6)]}\n            errorText=\"Please enter a valid password, at least 6 characters.\"\n            onInput={inputHandler}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            {isLoginMode ? \"LOGIN\" : \"SIGNUP\"}\n          </Button>\n        </form>\n        <Button inverse onClick={switchModeHandler}>\n          SWITCH TO {isLoginMode ? \"SIGNUP\" : \"LOGIN\"}\n        </Button>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default Auth;\n"],"names":["props","href","_jsx","className","concat","size","inverse","danger","children","to","Link","exact","type","onClick","disabled","file","setFile","useState","previewUrl","setPreviewUrl","isValid","setIsValid","filePickerRef","useRef","useEffect","fileReader","FileReader","onload","result","readAsDataURL","_jsxs","id","ref","style","display","accept","onChange","e","pickedFile","fileIsValid","target","files","length","onInput","center","src","alt","Button","pickImageHandler","current","click","errorText","inputReducer","state","action","value","val","validate","validators","isTouched","inputState","dispatch","useReducer","initialValue","initialValid","changeHandler","event","touchHandler","element","placeholder","onBlur","rows","htmlFor","label","Modal","onCancel","onClear","header","show","error","footer","ModalOverlay","content","headerClass","onSubmit","preventDefault","contentClass","footerClass","ReactDOM","document","getElementById","React","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","useHttpClient","isLoading","setIsLoading","setError","activeHttpRequests","sendRequest","async","url","method","arguments","undefined","body","headers","httpAbortCtrl","AbortController","push","response","fetch","signal","responseData","json","filter","reqCtrl","ok","Error","message","err","forEach","abortCtrl","abort","clearError","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","VALIDATOR_EMAIL","validator","trim","test","Auth","auth","useContext","AuthContext","isLoginMode","setIsLoginMode","inputHandler","setFormData","email","password","ErrorModal","Card","LoadingSpinner","asOverlay","process","JSON","stringify","login","userId","token","formData","FormData","append","name","image","Input","ImageUpload","switchModeHandler","prevMode"],"sourceRoot":""}